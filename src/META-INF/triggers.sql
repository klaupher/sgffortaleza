CREATE FUNCTION sgf.update_ultimatransmissao_veiculo() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    DECLARE
	VEIC_ID INTEGER;
	DIST_PONTO NUMERIC;
	PONTO_ID INTEGER;
	X_PT NUMERIC;
	Y_PT NUMERIC;
	ULT_T INTEGER;
    BEGIN
        IF (TG_OP = 'UPDATE' or TG_OP = 'INSERT') THEN
	   /*Cálculo do ponto mais próximo, e da distância*/
        SELECT 12756200*ASIN(SQRT(POWER(SIN((x(NEW.GEOM)- x(P.GEOMPONTO))*pi()/180/2),2) + COS(x(NEW.GEOM)*pi()/180)*COS(x(P.GEOMPONTO)*pi()/180)*POWER(SIN((y(NEW.GEOM)-y(P.GEOMPONTO))*pi()/180/2),2))) D, P.CODPONTO
	    INTO DIST_PONTO, PONTO_ID FROM sgf.TB_PONTO P ORDER BY D LIMIT 1;

	    SELECT COUNT(1) INTO ULT_T FROM sgf.TB_ULTIMATRANSMISSAO WHERE CODVEICULO = NEW.CODVEICULO;
	    SELECT CODVEICULO INTO VEIC_ID FROM sgf.TB_TRANSMISSAO WHERE CODVEICULO = NEW.CODVEICULO;

	    IF(ULT_T = 0) THEN
		    INSERT INTO sgf.TB_ULTIMATRANSMISSAO(DAT_TRANSMISSAO, DISTANCIA_PONTOPROX, ODOMETRO, 
		    TEMPERATURA, VELOCIDADE, CODPONTOPROX, CODVEICULO, GEOM) VALUES (NEW.DAT_TRANSMISSAO, DIST_PONTO, 
		    NEW.ODOMETRO,NEW.TEMPERATURA, NEW.VELOCIDADE, PONTO_ID, VEIC_ID, NEW.GEOM);
	    ELSE 
	        UPDATE sgf.TB_ULTIMATRANSMISSAO SET  DAT_TRANSMISSAO = NEW.DAT_TRANSMISSAO, DISTANCIA_PONTOPROX = DIST_PONTO,
	        ODOMETRO = NEW.ODOMETRO, TEMPERATURA = NEW.TEMPERATURA, VELOCIDADE = NEW.VELOCIDADE, 
	        CODPONTOPROX = PONTO_ID, GEOM = NEW.GEOM WHERE CODVEICULO = VEIC_ID;
	    END IF;
            RETURN NEW;
        END IF;
        RETURN NULL;
    END;
$$;


ALTER FUNCTION sgf.update_ultimatransmissao_veiculo() OWNER TO sgf;